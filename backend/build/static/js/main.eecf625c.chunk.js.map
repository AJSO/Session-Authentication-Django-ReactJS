{"version":3,"sources":["actions/types.js","actions/profile.js","components/Navbar.js","actions/auth.js","hocs/Layout.js","container/Home.js","components/CSRFToken.js","container/Register.js","container/Login.js","container/Dashboard.js","reducers/auth.js","reducers/profile.js","reducers/index.js","store.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","load_user","dispatch","a","config","headers","axios","get","process","res","data","error","type","payload","connect","state","isAuthenticated","auth","logout","header","Cookies","body","JSON","stringify","post","success","authLinks","className","to","onClick","href","guestLinks","exact","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","checkAuthenticated","children","useEffect","Home","CSRFToken","useState","csrftoken","setcsrftoken","fetchData","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","value","register","username","password","re_password","formData","setFormData","accountCreated","setAccountCreated","onChange","e","target","onSubmit","preventDefault","placeholder","required","minLength","login","autoFocus","htmlFor","Dashboard","initialState","first_name","last_name","phone","city","combineReducers","action","loading","profile","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","component","Login","Register","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eecf625c.chunk.js","sourcesContent":["// dispatch states\r\nexport const REGISTER_SUCCESS ='REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL ='REGISTER_FAIL'\r\nexport const LOGIN_SUCCESS ='LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL ='LOGIN_FAIL'\r\nexport const LOGOUT_SUCCESS ='LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL ='LOGOUT_FAIL'\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\n\r\n\r\n// Profile Dispatch States\r\nexport const LOAD_USER_PROFILE_SUCCESS = 'LOAD_USER_PROFILE_SUCCESS';\r\nexport const LOAD_USER_PROFILE_FAIL = 'LOAD_USER_PROFILE_FAIL';\r\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS';\r\nexport const UPDATE_USER_PROFILE_FAIL = 'UPDATE_USER_PROFILE_FAIL';\r\n\r\n","import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport {\r\n    // dispatch types\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    LOAD_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOAD_USER_PROFILE_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const update_profile = (first_name, last_name, phone, city) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true,\r\n        first_name,\r\n        last_name,\r\n        phone,\r\n        city\r\n    });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`, body, config);\r\n\r\n        if (res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: UPDATE_USER_PROFILE_FAIL\r\n        });\r\n    }\r\n};","import React, { Fragment } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst Navbar = ({ isAuthenticated, logout }) => {\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/dashboard'>Dashboard</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <a className='nav-link' onClick={logout} href='#!'>Logout</a>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/login'>Login</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/register'>Register</NavLink>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <div className='container-fluid'>\r\n                <Link className='navbar-brand' exact to='/'>Session Auth</Link>\r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-bs-toggle='collapse' \r\n                    data-bs-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        { isAuthenticated ? authLinks : guestLinks }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","// authentication actions\r\nimport axios from 'axios'; //for making api requests\r\nimport Cookies from 'js-cookie';\r\nimport { load_user } from './profile';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL\r\n} from './types';\r\n\r\n\r\n//check is Authenticated\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/users/authenticated`, config);\r\n\r\n        if (res.data.error || res.data.isAuthenticated === 'error') {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n        else if (res.data.isAuthenticated === 'success') {\r\n            dispatch({\r\n                type: AUTHENTICATED_SUCCESS,\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n            payload: false\r\n        });\r\n    }\r\n};\r\n//login action creator\r\nexport const login = (username, password) =>async dispatch =>{\r\n\r\n    //reguest configurations\r\n    const config = {\r\n\r\n        header:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'x-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n\r\n    };\r\n    // converting user data into a Json object.\r\n    const body = JSON.stringify({username, password});\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/users/login`,body, config);\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type:LOGIN_SUCCESS\r\n            });\r\n            // funtion to load the user details from the database.\r\n            dispatch(load_user());\r\n\r\n        }else{\r\n            dispatch({\r\n                type:LOGIN_FAIL\r\n            });\r\n        }     \r\n        \r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        });        \r\n    }\r\n\r\n}\r\n// registration end-point functionality action. Next, write the reducer for this in reducers/auth.js\r\nexport const register = (username, password, re_password) => async dispatch => {\r\n    //reguest configurations\r\n    const config = {\r\n\r\n        header:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'x-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n\r\n    };\r\n    const body = JSON.stringify({username, password, re_password});\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/users/register`,body, config);\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type:REGISTER_FAIL\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type:REGISTER_SUCCESS\r\n            });\r\n        }\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    }\r\n\r\n };\r\n// action creator for logging out a user\r\n export const logout = () =>async dispatch =>{\r\n\r\n    //reguest configurations\r\n    const config = {\r\n\r\n        header:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'x-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n\r\n    };\r\n    const body = JSON.stringify({\r\n        'withCredentials':true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/users/logout`,body, config);\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type:LOGOUT_SUCCESS\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type:LOGOUT_FAIL\r\n            });\r\n        }     \r\n        \r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type:LOGOUT_FAIL\r\n        });        \r\n    }\r\n};\r\n\r\n","import React, {Fragment, useEffect} from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated } from '../actions/auth';\r\nimport { load_user } from '../actions/profile';\r\n\r\nconst Layout = ({children, checkAuthenticated, load_user}) => {\r\n\r\n    useEffect(() => {\r\n        //included here because we want to use it once.\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {children}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user})(Layout);","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"masthead text-white text-center bg-info mt-5\">\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-9 mx-auto\">\r\n                    <h1 className=\"mb-5 mt-5\">Session Authentication</h1>\r\n                    </div>\r\n                    <div className=\"col-md-10 col-lg-8 col-xl-7 mx-auto\">\r\n        \r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CSRFToken = () => {\r\n    const [csrftoken, setcsrftoken] = useState('');\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/users/csrf_cookie`);\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'));\r\n    }, []);\r\n\r\n    return (\r\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\r\n    );\r\n};\r\n\r\nexport default CSRFToken;","import React,{useState, useEffect } from 'react';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {register} from '../actions/auth';\r\nimport './register.css';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Register = ({register, isAuthenticated}) => {\r\n\r\n    //our form fields.\r\n    const[formData, setFormData] = useState({\r\n        // object to fetch form data, empty by default.\r\n        username:'',\r\n        password:'',\r\n        re_password:''\r\n    });\r\n\r\n\r\n    //check the state of the new account. \r\n    const[accountCreated, setAccountCreated] = useState(false);\r\n\r\n    // destructure the form fields.\r\n    const {username, password,re_password} = formData;\r\n\r\n    // this updates our form fields.\r\n    const onChange = e=>setFormData({\r\n        //this is to update each field at a time.\r\n        ...formData, [e.target.name]:e.target.value \r\n    });\r\n\r\n    //when the user submits the form.\r\n    const onSubmit = e=>{\r\n        e.preventDefault();\r\n\r\n        if(password === re_password){\r\n            // do the register action.\r\n            register(username,password,re_password);\r\n            //change the state of the account.\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    //if successfully creates account, redirect to the home page.\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    }\r\n    else if(accountCreated){\r\n        return <Redirect to='/login' />\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"container\">\r\n                <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n                <h3>Register Here</h3>\r\n                <CSRFToken />\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label  mt-3'>Username:</label>\r\n                        <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Username\"\r\n                        name='username'\r\n                        value={username}\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label mt-3'>Password:</label>\r\n                        <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Password\"\r\n                        name='password'\r\n                        value={password}\r\n                        minLength='6'\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label mt-3'>Confirm Password</label>\r\n                        <input type=\"password\"\r\n                        className=\"form-control\" \r\n                        placeholder=\"Confirm Password\"\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        minLength='6'\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary mt-3\" >Register</button>\r\n                    \r\n                </form>\r\n                <p className=\"forgot-password text-right mt-3\">\r\n                        Already have an account? <Link to='/login'>Login</Link>\r\n                    </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=state=>({\r\n    isAuthenticated:state.auth.isAuthenticated    \r\n});\r\nexport default connect(mapStateToProps,{register})(Register);","import React,{useState, useEffect } from 'react';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../actions/auth';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n\r\n    //our form fields.\r\n    const[formData, setFormData] = useState({\r\n        // object to fetch form data, empty by default.\r\n        username:'',\r\n        password:''\r\n    });\r\n\r\n    // destructure the form fields.\r\n    const {username, password} = formData;\r\n    // this updates our form fields.\r\n    const onChange = e=>setFormData({\r\n        //this is to update each field at a time.\r\n        ...formData, [e.target.name]:e.target.value \r\n    });\r\n    //when the user submits the form.\r\n    const onSubmit = e=>{\r\n        e.preventDefault();\r\n        // do the login action.\r\n        login(username,password);    \r\n    };\r\n    //if successfully logged in, redirect to the home page.\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    };\r\n\r\n    return (\r\n    <div className=\"login\">\r\n        <div className=\"container\">\r\n                <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n                <CSRFToken/>\r\n                    <h3>Log in</h3>\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label  mt-3'>Username:</label>\r\n                        <input type=\"text\" autoFocus \r\n                        className=\"form-control\" \r\n                        placeholder=\"Username\"\r\n                        name='username'\r\n                        value={username}\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label mt-3'>Password:</label>\r\n                        <input type=\"password\" autoFocus \r\n                        className=\"form-control\" \r\n                        placeholder=\"Password\"\r\n                        name='password'\r\n                        value={password}\r\n                        minLength='6'\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <div className=\"custom-control custom-checkbox mt-3\">\r\n                            <input type=\"checkbox\"\r\n                            className=\"custom-control-input\" \r\n                            id=\"customCheck1\" />\r\n                            <label className=\"custom-control-label\" \r\n                            htmlFor=\"customCheck1\">Remember me</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary mt-3\">Sign in</button>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Forgot <a href=\"!#\">password?</a>\r\n                    </p>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Have no account yet? <Link to='/register'>Register</Link>\r\n                    </p>\r\n                </form>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps=state=>({\r\n    isAuthenticated:state.auth.isAuthenticated    \r\n});\r\n\r\nexport default connect(mapStateToProps,{login})(Login);","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div>\r\n            Dashboard\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","/* eslint-disable import/no-anonymous-default-export */\r\n// authentication reducers\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL\r\n} from '../actions/types';\r\n\r\n// the initialState\r\nconst initialState = {\r\n    // application level states\r\n    isAuthenticated: null\r\n};\r\n// for each action we need to make a reducer to support it, this is an annonymous function.\r\nexport default function (state = initialState, action){\r\n    // destructure the action, Next, we now work on our register page.\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_FAIL:\r\n        case REGISTER_FAIL:\r\n            return state\r\n        default:\r\n            return state\r\n        \r\n\r\n    };   \r\n\r\n};\r\n\r\n// Reducers to handle the dispatch states.\r\n\r\n","import {\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    LOAD_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: ''\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n        case UPDATE_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username: payload.username,\r\n                first_name: payload.profile.first_name,\r\n                last_name: payload.profile.last_name,\r\n                phone: payload.profile.phone,\r\n                city: payload.profile.city,\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                phone: '',\r\n                city: '',\r\n            }\r\n        case UPDATE_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};","// index reducers\r\nimport {combineReducers} from 'redux'\r\nimport auth from './auth'\r\nimport profile from './profile'\r\n\r\nexport default combineReducers({\r\n    // for any other reducers made goes here.\r\n    auth,\r\n    profile\r\n})","// this is where the stores will be configured from.\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n\r\nconst initialState ={};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport Layout from './hocs/Layout';\r\nimport Home from './container/Home';\r\nimport Register from './container/Register';\r\nimport Login from './container/Login';\r\nimport Dashboard from './container/Dashboard';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\n// rsc\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Layout>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route exact path='/register' component={Register} />\r\n                    <Route exact path='/' component={Dashboard} />\r\n                    \r\n                </Layout>            \r\n            </Router>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}