{"version":3,"sources":["actions/types.js","components/Navbar.js","actions/auth.js","hocs/Layout.js","container/Home.js","components/CSRFToken.js","container/Register.js","container/Login.js","container/Dashboard.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","connect","state","isAuthenticated","auth","logout","dispatch","a","config","header","Cookies","get","body","JSON","stringify","axios","post","process","data","success","type","authLinks","className","to","onClick","href","guestLinks","exact","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","placeholder","Layout","children","Home","CSRFToken","useState","csrfToken","setCsrfToken","useEffect","fetchData","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","value","register","username","password","re_password","error","formData","setFormData","accountCreated","setAccountCreated","onChange","e","target","onSubmit","preventDefault","autoFocus","required","minLength","login","res","payload","htmlFor","disabled","Dashboard","initialState","first_name","last_name","phone","city","combineReducers","action","loading","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","component","Login","Register","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97ed8623.chunk.js","sourcesContent":["// dispatch states\r\nexport const REGISTER_SUCCESS ='REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL ='REGISTER_FAIL'\r\nexport const LOGIN_SUCCESS ='LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL ='LOGIN_FAIL'\r\nexport const LOGOUT_SUCCESS ='LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL ='LOGOUT_FAIL'\r\n\r\n","import React, {Fragment} from 'react';\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'; //will be used to bring in 'isAuthenticated' from the reducers\r\nimport {logout} from '../actions/auth'\r\n\r\nconst Navbar = ({isAuthenticated, logout}) => {\r\n\r\n    // define the Links of a logged in user\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/dashboard'>Dashboard</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <a className='nav-link' onClick={logout} href='#!'>Logout</a>\r\n            </li>\r\n        </Fragment>\r\n\r\n    );\r\n    // define the guestLink function\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/login'>Login</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/register'>Register</NavLink>\r\n            </li>\r\n        </Fragment>\r\n\r\n    );\r\n    \r\n    return(\r\n        <div>\r\n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n                <div className='container-fluid'>\r\n                    <Link className='navbar-brand' exact to='/'>Session Auth</Link>\r\n                    <button className='navbar-toggler' type='button' data-bs-toggle='collapse' data-bs-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>\r\n                    <span className='navbar-toggler-icon'></span>\r\n                    </button>\r\n                    <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n                    <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                        { isAuthenticated ? authLinks : guestLinks }\r\n                    </ul>\r\n                    <form className='d-flex'>\r\n                        <input className='form-control me-2' type='search' placeholder='Search' aria-label='Search'/>\r\n                        <button className='btn btn-outline-success' type='submit'>Search</button>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n   \r\n};\r\n\r\nconst mapStateToProps=state=>({\r\n    isAuthenticated:state.auth.isAuthenticated    \r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar);","// authentication actions\r\nimport axios from 'axios'; //for making api requests\r\nimport Cookies from 'js-cookie';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL\r\n} from './types';\r\n\r\n//login action creator\r\nexport const login = (username, password) =>async dispatch =>{\r\n\r\n    //reguest configurations\r\n    const config = {\r\n\r\n        header:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrfToken')\r\n        }\r\n\r\n    };\r\n    // converting user data into a Json object.\r\n    const body = JSON.stringify({username, password});\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/users/login`,body, config);\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                payload:res.data.username\r\n            });\r\n            // funtion to load the user details from the database.\r\n\r\n        }else{\r\n            dispatch({\r\n                type:LOGIN_FAIL\r\n            });\r\n        }     \r\n        \r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        });        \r\n    }\r\n\r\n}\r\n// registration end-point functionality action. Next, write the reducer for this in reducers/auth.js\r\nexport const register = (username, password, re_password) => async dispatch => {\r\n    //reguest configurations\r\n    const config = {\r\n\r\n        header:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrfToken')\r\n        }\r\n\r\n    };\r\n    const body = JSON.stringify({username, password, re_password});\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/users/register`,body, config);\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type:REGISTER_FAIL\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type:REGISTER_SUCCESS\r\n            });\r\n        }\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    }\r\n\r\n };\r\n// action creator for logging out a user\r\n export const logout = () =>async dispatch =>{\r\n\r\n    //reguest configurations\r\n    const config = {\r\n\r\n        header:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrfToken')\r\n        }\r\n\r\n    };\r\n    const body = JSON.stringify({\r\n        'withCredentials':true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/users/logout`,body, config);\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type:LOGOUT_SUCCESS\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type:LOGOUT_FAIL\r\n            });\r\n        }     \r\n        \r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type:LOGOUT_FAIL\r\n        });        \r\n    }\r\n};\r\n\r\n","import React, {Fragment} from 'react';\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst Layout = ({children}) => {\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {children}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"masthead text-white text-center bg-info mt-5\">\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-9 mx-auto\">\r\n                    <h1 className=\"mb-5 mt-5\">Session Authentication</h1>\r\n                    </div>\r\n                    <div className=\"col-md-10 col-lg-8 col-xl-7 mx-auto\">\r\n        \r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\n\r\nconst CSRFToken = () => {\r\n\r\n    const[csrfToken, setCsrfToken] = useState('');\r\n\r\n    // function to help retrieve the csrfToken into the application.\r\n    const getCookie =(name)=> {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n    // const csrftoken = getCookie('csrftoken');\r\n    useEffect(()=>{\r\n\r\n        const fetchData = async()=>{\r\n            // accessing the csrfToken EndPoint.\r\n            try {\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/users/csrf_cookie`);\r\n\r\n            } catch (err) {\r\n                \r\n            }\r\n\r\n        };\r\n\r\n        fetchData();\r\n        // retrieving the csrfToken\r\n        setCsrfToken(getCookie('csrfToken'));\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrfToken} />\r\n    );\r\n};\r\n\r\nexport default CSRFToken;","import React,{useState, useEffect } from 'react';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {register} from '../actions/auth';\r\nimport './register.css';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Register = ({register, isAuthenticated}) => {\r\n\r\n    //our form fields.\r\n    const[formData, setFormData] = useState({\r\n        // object to fetch form data, empty by default.\r\n        username:'',\r\n        password:'',\r\n        re_password:''\r\n    });\r\n\r\n\r\n    //check the state of the new account. \r\n    const[accountCreated, setAccountCreated] = useState(false);\r\n\r\n    // destructure the form fields.\r\n    const {username, password,re_password} = formData;\r\n\r\n    // this updates our form fields.\r\n    const onChange = e=>setFormData({\r\n        //this is to update each field at a time.\r\n        ...formData, [e.target.name]:e.target.value \r\n    });\r\n\r\n    //when the user submits the form.\r\n    const onSubmit = e=>{\r\n        e.preventDefault();\r\n\r\n        if(password === re_password){\r\n            // do the register action.\r\n            register(username,password,re_password);\r\n            //change the state of the account.\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    //if successfully creates account, redirect to the home page.\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    }\r\n    else if(accountCreated){\r\n        return <Redirect to='/login' />\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"container\">\r\n                <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n                <CSRFToken/>\r\n                <h3>Register Here</h3>\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label  mt-3'>Username:</label>\r\n                        <input type=\"text\" autoFocus \r\n                        className=\"form-control\" \r\n                        placeholder=\"Username\"\r\n                        name='username'\r\n                        value={username}\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label mt-3'>Password:</label>\r\n                        <input type=\"password\" autoFocus \r\n                        className=\"form-control\" \r\n                        placeholder=\"Password\"\r\n                        name='password'\r\n                        value={password}\r\n                        minLength='6'\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='form-label mt-3'>Confirm Password</label>\r\n                        <input type=\"password\" autoFocus \r\n                        className=\"form-control\" \r\n                        placeholder=\"Confirm Password\"\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        minLength='6'\r\n                        onChange={e=>onChange(e)}\r\n                        required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary mt-3\" >Register</button>\r\n                    \r\n                </form>\r\n                <p className=\"forgot-password text-right mt-3\">\r\n                        Already have an account? <Link to='/login'>Login</Link>\r\n                    </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=state=>({\r\n    isAuthenticated:state.auth.isAuthenticated    \r\n});\r\nexport default connect(mapStateToProps,{register})(Register);","import React,{useState, useEffect } from 'react';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../actions/auth';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Login = (login, isAuthenticated) => {\r\n\r\n    //our form fields.\r\n    const[formData, setFormData] = useState({\r\n        // object to fetch form data, empty by default.\r\n        username:'',\r\n        password:''\r\n    });\r\n\r\n    // destructure the form fields.\r\n    const {username, password} = formData;\r\n    // this updates our form fields.\r\n    const onChange = e=>setFormData({\r\n        //this is to update each field at a time.\r\n        ...formData, [e.target.name]:e.target.value \r\n    });\r\n    //when the user submits the form.\r\n    const onSubmit = e=>{\r\n        e.preventDefault();\r\n        // do the login action.\r\n        login(username,password);    \r\n    };\r\n    //if successfully logged in, redirect to the home page.\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    };\r\n\r\n    function validateForm() {\r\n        return username.length > 0 && password.length > 0;\r\n      }\r\n\r\n    return (\r\n    <div className=\"login\">\r\n        <div className=\"container\">\r\n                <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n                <CSRFToken/>\r\n                    <h3>Log in</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\"\r\n                        autoFocus \r\n                        className=\"form-control\" \r\n                        placeholder=\"Enter Username\"\r\n                        value={username}\r\n                        onChange={e=>onChange(e)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        minLength='6'\r\n                        onChange={e=>onChange(e)} />\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input type=\"checkbox\"\r\n                            className=\"custom-control-input\" \r\n                            id=\"customCheck1\" />\r\n                            <label className=\"custom-control-label\" \r\n                            htmlFor=\"customCheck1\">Remember me</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\" \r\n                    disabled={!validateForm()}>Sign in</button>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Forgot <a href=\"!#\">password?</a>\r\n                    </p>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Have no account yet? <Link to='/register'>Register</Link>\r\n                    </p>\r\n                </form>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps=state=>({\r\n    isAuthenticated:state.auth.isAuthenticated    \r\n});\r\n\r\nexport default connect(mapStateToProps,{login})(Login);","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div>\r\n            Dashboard\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","/* eslint-disable import/no-anonymous-default-export */\r\n// authentication reducers\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL\r\n} from '../actions/types';\r\n\r\n// the initialState\r\nconst initialState ={\r\n    // application level states\r\n    isAuthenticated: null,\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: ''\r\n};\r\n// for each action we need to make a reducer to support it, this is an annonymous function.\r\nexport default function (state = initialState, action){\r\n    // destructure the action, Next, we now work on our register page.\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                username:payload\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                username:''\r\n            }\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_FAIL:\r\n        case REGISTER_FAIL:\r\n            return state\r\n        default:\r\n            return state\r\n        \r\n\r\n    };   \r\n\r\n};\r\n\r\n// Reducers to handle the dispatch states.\r\n\r\n","// index reducers\r\nimport {combineReducers} from 'redux'\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    // for any other reducers made goes here.\r\n    auth\r\n})","// this is where the stores will be configured from.\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n\r\nconst initialState ={};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport Layout from './hocs/Layout';\r\nimport Home from './container/Home';\r\nimport Register from './container/Register';\r\nimport Login from './container/Login';\r\nimport Dashboard from './container/Dashboard';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\n// rsc\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Layout>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route exact path='/register' component={Register} />\r\n                    <Route exact path='/dashboard' component={Dashboard} />\r\n                    \r\n                </Layout>            \r\n            </Router>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}